parameters:
  locale: 'en'
  router.request_context.host: '%env(APP_URL)%'

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
    public: false       # Allows optimizing the container by removing unused services; this also means
      # fetching services directly from the container via $container->get() won't work.
    # The best practice is to be explicit about your dependencies anyway.
    bind:
      $projectDir: '%kernel.project_dir%'
      $githubChangelogToLogRepository: '%env(GITHUB_CHANGELOG_TO_LOG_REPOSITORY)%'

  _instanceof:
    App\Strategy\GithubRst\StrategyInterface:
      tags: [ 'github_rst_strategy' ]
      lazy: true

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    resource: '../src/Controller'
    tags: [ 'controller.service_arguments' ]

  redmine.client.forge:
    class: Redmine\Client\NativeCurlClient
    public: true
    arguments:
      $url: '%env(FORGE_ENDPOINT)%'
      $apikeyOrUsername: '%env(FORGE_ACCESS_TOKEN)%'
    tags:
      - testDouble

  guzzle.client.general:
    class: GuzzleHttp\Client
    tags:
      - testDouble

  guzzle.client.github:
    class: GuzzleHttp\Client
    arguments:
      $config:
        headers:
          User-Agent: 'TYPO3 Intercept'
          Authorization: 'token %env(GITHUB_API_PASSWORD_TOKEN)%'
        base_uri: 'https://api.github.com/'
    tags:
      - testDouble

  guzzle.client.slack:
    class: GuzzleHttp\Client
    tags:
      - testDouble

  App\Service\LocalCoreGitService:
    class: App\Service\LocalCoreGitService
    public: true
    arguments:
      $pullRequestCorePath: '%kernel.project_dir%/var/git-core-pr/'
    tags:
      - testDouble

  App\Service\GitService:
    class: App\Service\GitService
    arguments:
      $logger: '@monolog.logger.request'

  App\Service\ForgeService:
    class: App\Service\ForgeService
    arguments:
      $client: '@redmine.client.forge'

  App\Service\SlackService:
    class: App\Service\SlackService
    public: true
    arguments:
      $client: '@guzzle.client.slack'
      $hook: '%env(SLACK_HOOK)%'

  App\Service\GithubService:
    class: App\Service\GithubService
    arguments:
      # Absolute path to local directory where GitHub core pull request files are put
      $pullRequestPatchPath: '%kernel.project_dir%/var/patches/'
      $generalClient: '@guzzle.client.general'
      $githubClient: '@guzzle.client.github'
      $accessKey: '%env(GITHUB_ACCESS_TOKEN)%'

  App\Service\DocumentationBuildInformationService:
    class: App\Service\DocumentationBuildInformationService
    public: true
    arguments:
      $privateDir: '%kernel.project_dir%/var'
      $subDir: 'docs-build-information'
      $generalClient: '@guzzle.client.general'
    tags:
      - testDouble

  App\Service\DocsServerNginxService:
    class: App\Service\DocsServerNginxService
    public: true
    arguments:
      $staticDir: '%kernel.project_dir%/config/nginx'
    tags:
      - testDouble

  App\Strategy\GithubRst\StrategyResolver:
    arguments:
      $strategies: !tagged 'github_rst_strategy'

  App\Strategy\GithubRst\AddedFilesStrategy:
    arguments:
      $generalClient: '@guzzle.client.general'

  App\Strategy\GithubRst\DeletedFilesStrategy:
    arguments:
      $generalClient: '@guzzle.client.general'

  App\Strategy\GithubRst\ModifiedFilesStrategy:
    arguments:
      $generalClient: '@guzzle.client.general'

  App\Security\LogoutSuccessHandler:
    class: App\Security\LogoutSuccessHandler
    arguments:
      $urlService: '@datahub.typo3.com.urlService'
      $appUrl: '%env(APP_URL)%'

  App\EventListener\KernelTerminateListener:
    tags:
      - { name: kernel.event_listener, event: kernel.terminate }
